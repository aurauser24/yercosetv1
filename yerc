local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "yercoset v1",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "yerco is loading",
   LoadingSubtitle = "by RXME",
   Theme = "Default", -- Check  https://docs.sirius.menu/rayfield/configuration/themes 

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = ".gg/axgPz2mUyY", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local aimTab = Window:CreateTab("aim", 4483362458) -- Title, Image

local visualTab = Window:CreateTab("esp", 4483362458) -- Title, Image

local Button = visualTab:CreateButton({
   Name = "ESP(USER)",
   Callback = function()
       -- Ensure to get necessary services
       local Players = game:GetService("Players")
       local RunService = game:GetService("RunService")
       local TweenService = game:GetService("TweenService")

       -- Rainbow color sequence
       local rainbowColors = {
           Color3.fromRGB(255, 0, 0),    -- Red
           Color3.fromRGB(255, 165, 0),  -- Orange
           Color3.fromRGB(255, 255, 0),  -- Yellow
           Color3.fromRGB(0, 255, 0),    -- Green
           Color3.fromRGB(0, 0, 255),    -- Blue
           Color3.fromRGB(75, 0, 130),   -- Indigo
           Color3.fromRGB(238, 130, 238) -- Violet
       }

       -- Function to create the ESP box and display name above the character
       local function createRainbowESPBox(character)
           if not character then return end
           local rootPart = character:FindFirstChild("HumanoidRootPart")
           if not rootPart then return end

           -- Create the BillboardGui to show the display name above the character
           local billboardGui = Instance.new("BillboardGui")
           billboardGui.Adornee = rootPart
           billboardGui.Size = UDim2.new(0, 80, 0, 20) -- Smaller size for the ESP box
           billboardGui.StudsOffset = Vector3.new(0, 1, 0) -- Smaller height above the character
           billboardGui.AlwaysOnTop = true
           billboardGui.Parent = character

           -- Create the frame (box) inside the BillboardGui
           local frame = Instance.new("Frame")
           frame.Size = UDim2.new(1, 0, 1, 0) -- Adjusted to fit within the smaller BillboardGui
           frame.BackgroundTransparency = 0.5
           frame.BackgroundColor3 = rainbowColors[1] -- Start with the first color
           frame.BorderSizePixel = 0
           frame.Parent = billboardGui

           -- Add text to show the player's display name
           local displayNameText = Instance.new("TextLabel")
           displayNameText.Size = UDim2.new(1, 0, 1, 0)
           displayNameText.BackgroundTransparency = 1
           displayNameText.Text = character:FindFirstChild("DisplayName") and character.DisplayName or character.Name
           displayNameText.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text color
           displayNameText.TextScaled = true
           displayNameText.TextSize = 10 -- Even smaller text size for compact ESP
           displayNameText.Parent = billboardGui

           -- Tween for smooth color changes of the box
           local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
           local function cycleColors()
               while true do
                   for _, color in ipairs(rainbowColors) do
                       local tween = TweenService:Create(frame, tweenInfo, {BackgroundColor3 = color})
                       tween:Play()
                       tween.Completed:Wait()
                   end
               end
           end

           -- Start cycling colors
           spawn(cycleColors)
       end

       -- Function to handle player joining
       local function onPlayerAdded(player)
           player.CharacterAdded:Connect(function(character)
               task.wait(1) -- Wait for character to load
               createRainbowESPBox(character)

               -- Re-apply ESP if the character dies and respawns
               player.CharacterRemoving:Connect(function()
                   task.wait(1)
                   if player.Character then
                       createRainbowESPBox(player.Character)
                   end
               end)
           end)
       end

       -- Apply ESP to all existing players (also ensure ESP is applied to players already in the game)
       for _, player in pairs(Players:GetPlayers()) do
           if player.Character then
               createRainbowESPBox(player.Character)
           end
           onPlayerAdded(player)
       end

       Players.PlayerAdded:Connect(onPlayerAdded)
   end,
})

local miscTab = Window:CreateTab("misc", 4483362458) -- Title, Image

local Button = miscTab:CreateButton({
   Name = "fly",
   Callback = function()
       local flying = false
       local speed = 300 -- ðŸš€ Increased speed (Adjust as needed)
       local UserInputService = game:GetService("UserInputService")
       local RunService = game:GetService("RunService")
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local rootPart = character:WaitForChild("HumanoidRootPart")

       local activeKeys = {}
       local movementKeys = {
           [Enum.KeyCode.W] = Vector3.new(0, 0, -1), -- Forward
           [Enum.KeyCode.S] = Vector3.new(0, 0, 1),  -- Backward
           [Enum.KeyCode.A] = Vector3.new(-1, 0, 0), -- Left
           [Enum.KeyCode.D] = Vector3.new(1, 0, 0),  -- Right
           [Enum.KeyCode.Space] = Vector3.new(0, 1, 0), -- Up
           [Enum.KeyCode.LeftControl] = Vector3.new(0, -1, 0), -- Down
       }

       local function updateFlyDirection()
           local direction = Vector3.new(0, 0, 0)
           for key, vector in pairs(movementKeys) do
               if activeKeys[key] then
                   direction = direction + vector
               end
           end
           if direction.Magnitude > 0 then
               return (rootPart.CFrame:VectorToWorldSpace(direction.Unit)) * speed
           else
               return Vector3.new(0, 0, 0)
           end
       end

       local function startFlying()
           if flying then return end
           flying = true
           rootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0) -- Reset velocity
           
           connection = RunService.Heartbeat:Connect(function()
               if not flying then
                   connection:Disconnect()
                   return
               end
               if rootPart then
                   local flyDirection = updateFlyDirection()
                   rootPart.AssemblyLinearVelocity = flyDirection -- ðŸš€ Fast & smooth velocity handling
               end
           end)
       end

       local function stopFlying()
           flying = false
           if connection then
               connection:Disconnect()
           end
           if rootPart then
               rootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0) -- ðŸš€ Instantly stop flying
           end
       end

       UserInputService.InputBegan:Connect(function(input, gameProcessed)
           if gameProcessed then return end
           if input.KeyCode == Enum.KeyCode.F then
               if flying then
                   stopFlying()
               else
                   startFlying()
               end
           elseif movementKeys[input.KeyCode] then
               activeKeys[input.KeyCode] = true
           end
       end)

       UserInputService.InputEnded:Connect(function(input, gameProcessed)
           if gameProcessed then return end
           if movementKeys[input.KeyCode] then
               activeKeys[input.KeyCode] = nil
           end
       end)
   end,
})
